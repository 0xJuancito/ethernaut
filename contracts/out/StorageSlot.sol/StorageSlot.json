{"abi":[],"bytecode":{"object":"0x60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205f31e9501daaddd0afc510b1fdc156f0b33e28a7ea7292464b3bf8d0f47e50b564736f6c63430008180033","sourceMap":"1279:1391:35:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1279:1391:35;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205f31e9501daaddd0afc510b1fdc156f0b33e28a7ea7292464b3bf8d0f47e50b564736f6c63430008180033","sourceMap":"1279:1391:35:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-08/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-06/=lib/openzeppelin-contracts-06/contracts/\",\":openzeppelin-contracts-08/=lib/openzeppelin-contracts-08/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-08/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-06/=lib/openzeppelin-contracts-06/contracts/","openzeppelin-contracts-08/=lib/openzeppelin-contracts-08/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"],"optimizer":{"enabled":true,"runs":1000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts-08/contracts/utils/StorageSlot.sol":"StorageSlot"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/openzeppelin-contracts-08/contracts/utils/StorageSlot.sol":{"keccak256":"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d","urls":["bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4","dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts-08/contracts/utils/StorageSlot.sol","id":48342,"exportedSymbols":{"StorageSlot":[48341]},"nodeType":"SourceUnit","src":"105:2566:35","nodes":[{"id":48283,"nodeType":"PragmaDirective","src":"105:23:35","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":48341,"nodeType":"ContractDefinition","src":"1279:1391:35","nodes":[{"id":48287,"nodeType":"StructDefinition","src":"1305:49:35","nodes":[],"canonicalName":"StorageSlot.AddressSlot","members":[{"constant":false,"id":48286,"mutability":"mutable","name":"value","nameLocation":"1342:5:35","nodeType":"VariableDeclaration","scope":48287,"src":"1334:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48285,"name":"address","nodeType":"ElementaryTypeName","src":"1334:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1312:11:35","scope":48341,"visibility":"public"},{"id":48290,"nodeType":"StructDefinition","src":"1360:46:35","nodes":[],"canonicalName":"StorageSlot.BooleanSlot","members":[{"constant":false,"id":48289,"mutability":"mutable","name":"value","nameLocation":"1394:5:35","nodeType":"VariableDeclaration","scope":48290,"src":"1389:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":48288,"name":"bool","nodeType":"ElementaryTypeName","src":"1389:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1367:11:35","scope":48341,"visibility":"public"},{"id":48293,"nodeType":"StructDefinition","src":"1412:49:35","nodes":[],"canonicalName":"StorageSlot.Bytes32Slot","members":[{"constant":false,"id":48292,"mutability":"mutable","name":"value","nameLocation":"1449:5:35","nodeType":"VariableDeclaration","scope":48293,"src":"1441:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1441:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1419:11:35","scope":48341,"visibility":"public"},{"id":48296,"nodeType":"StructDefinition","src":"1467:49:35","nodes":[],"canonicalName":"StorageSlot.Uint256Slot","members":[{"constant":false,"id":48295,"mutability":"mutable","name":"value","nameLocation":"1504:5:35","nodeType":"VariableDeclaration","scope":48296,"src":"1496:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":48294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1474:11:35","scope":48341,"visibility":"public"},{"id":48307,"nodeType":"FunctionDefinition","src":"1614:190:35","nodes":[],"body":{"id":48306,"nodeType":"Block","src":"1698:106:35","nodes":[],"statements":[{"AST":{"nativeSrc":"1760:38:35","nodeType":"YulBlock","src":"1760:38:35","statements":[{"nativeSrc":"1774:14:35","nodeType":"YulAssignment","src":"1774:14:35","value":{"name":"slot","nativeSrc":"1784:4:35","nodeType":"YulIdentifier","src":"1784:4:35"},"variableNames":[{"name":"r.slot","nativeSrc":"1774:6:35","nodeType":"YulIdentifier","src":"1774:6:35"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":48303,"isOffset":false,"isSlot":true,"src":"1774:6:35","suffix":"slot","valueSize":1},{"declaration":48299,"isOffset":false,"isSlot":false,"src":"1784:4:35","valueSize":1}],"id":48305,"nodeType":"InlineAssembly","src":"1751:47:35"}]},"documentation":{"id":48297,"nodeType":"StructuredDocumentation","src":"1522:87:35","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1623:14:35","parameters":{"id":48300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48299,"mutability":"mutable","name":"slot","nameLocation":"1646:4:35","nodeType":"VariableDeclaration","scope":48307,"src":"1638:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1638:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1637:14:35"},"returnParameters":{"id":48304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48303,"mutability":"mutable","name":"r","nameLocation":"1695:1:35","nodeType":"VariableDeclaration","scope":48307,"src":"1675:21:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$48287_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":48302,"nodeType":"UserDefinedTypeName","pathNode":{"id":48301,"name":"AddressSlot","nameLocations":["1675:11:35"],"nodeType":"IdentifierPath","referencedDeclaration":48287,"src":"1675:11:35"},"referencedDeclaration":48287,"src":"1675:11:35","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$48287_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1674:23:35"},"scope":48341,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":48318,"nodeType":"FunctionDefinition","src":"1902:190:35","nodes":[],"body":{"id":48317,"nodeType":"Block","src":"1986:106:35","nodes":[],"statements":[{"AST":{"nativeSrc":"2048:38:35","nodeType":"YulBlock","src":"2048:38:35","statements":[{"nativeSrc":"2062:14:35","nodeType":"YulAssignment","src":"2062:14:35","value":{"name":"slot","nativeSrc":"2072:4:35","nodeType":"YulIdentifier","src":"2072:4:35"},"variableNames":[{"name":"r.slot","nativeSrc":"2062:6:35","nodeType":"YulIdentifier","src":"2062:6:35"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":48314,"isOffset":false,"isSlot":true,"src":"2062:6:35","suffix":"slot","valueSize":1},{"declaration":48310,"isOffset":false,"isSlot":false,"src":"2072:4:35","valueSize":1}],"id":48316,"nodeType":"InlineAssembly","src":"2039:47:35"}]},"documentation":{"id":48308,"nodeType":"StructuredDocumentation","src":"1810:87:35","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1911:14:35","parameters":{"id":48311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48310,"mutability":"mutable","name":"slot","nameLocation":"1934:4:35","nodeType":"VariableDeclaration","scope":48318,"src":"1926:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1926:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1925:14:35"},"returnParameters":{"id":48315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48314,"mutability":"mutable","name":"r","nameLocation":"1983:1:35","nodeType":"VariableDeclaration","scope":48318,"src":"1963:21:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$48290_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":48313,"nodeType":"UserDefinedTypeName","pathNode":{"id":48312,"name":"BooleanSlot","nameLocations":["1963:11:35"],"nodeType":"IdentifierPath","referencedDeclaration":48290,"src":"1963:11:35"},"referencedDeclaration":48290,"src":"1963:11:35","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$48290_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"1962:23:35"},"scope":48341,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":48329,"nodeType":"FunctionDefinition","src":"2190:190:35","nodes":[],"body":{"id":48328,"nodeType":"Block","src":"2274:106:35","nodes":[],"statements":[{"AST":{"nativeSrc":"2336:38:35","nodeType":"YulBlock","src":"2336:38:35","statements":[{"nativeSrc":"2350:14:35","nodeType":"YulAssignment","src":"2350:14:35","value":{"name":"slot","nativeSrc":"2360:4:35","nodeType":"YulIdentifier","src":"2360:4:35"},"variableNames":[{"name":"r.slot","nativeSrc":"2350:6:35","nodeType":"YulIdentifier","src":"2350:6:35"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":48325,"isOffset":false,"isSlot":true,"src":"2350:6:35","suffix":"slot","valueSize":1},{"declaration":48321,"isOffset":false,"isSlot":false,"src":"2360:4:35","valueSize":1}],"id":48327,"nodeType":"InlineAssembly","src":"2327:47:35"}]},"documentation":{"id":48319,"nodeType":"StructuredDocumentation","src":"2098:87:35","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2199:14:35","parameters":{"id":48322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48321,"mutability":"mutable","name":"slot","nameLocation":"2222:4:35","nodeType":"VariableDeclaration","scope":48329,"src":"2214:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2214:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2213:14:35"},"returnParameters":{"id":48326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48325,"mutability":"mutable","name":"r","nameLocation":"2271:1:35","nodeType":"VariableDeclaration","scope":48329,"src":"2251:21:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$48293_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":48324,"nodeType":"UserDefinedTypeName","pathNode":{"id":48323,"name":"Bytes32Slot","nameLocations":["2251:11:35"],"nodeType":"IdentifierPath","referencedDeclaration":48293,"src":"2251:11:35"},"referencedDeclaration":48293,"src":"2251:11:35","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$48293_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2250:23:35"},"scope":48341,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":48340,"nodeType":"FunctionDefinition","src":"2478:190:35","nodes":[],"body":{"id":48339,"nodeType":"Block","src":"2562:106:35","nodes":[],"statements":[{"AST":{"nativeSrc":"2624:38:35","nodeType":"YulBlock","src":"2624:38:35","statements":[{"nativeSrc":"2638:14:35","nodeType":"YulAssignment","src":"2638:14:35","value":{"name":"slot","nativeSrc":"2648:4:35","nodeType":"YulIdentifier","src":"2648:4:35"},"variableNames":[{"name":"r.slot","nativeSrc":"2638:6:35","nodeType":"YulIdentifier","src":"2638:6:35"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":48336,"isOffset":false,"isSlot":true,"src":"2638:6:35","suffix":"slot","valueSize":1},{"declaration":48332,"isOffset":false,"isSlot":false,"src":"2648:4:35","valueSize":1}],"id":48338,"nodeType":"InlineAssembly","src":"2615:47:35"}]},"documentation":{"id":48330,"nodeType":"StructuredDocumentation","src":"2386:87:35","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2487:14:35","parameters":{"id":48333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48332,"mutability":"mutable","name":"slot","nameLocation":"2510:4:35","nodeType":"VariableDeclaration","scope":48340,"src":"2502:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":48331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2502:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2501:14:35"},"returnParameters":{"id":48337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48336,"mutability":"mutable","name":"r","nameLocation":"2559:1:35","nodeType":"VariableDeclaration","scope":48340,"src":"2539:21:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$48296_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":48335,"nodeType":"UserDefinedTypeName","pathNode":{"id":48334,"name":"Uint256Slot","nameLocations":["2539:11:35"],"nodeType":"IdentifierPath","referencedDeclaration":48296,"src":"2539:11:35"},"referencedDeclaration":48296,"src":"2539:11:35","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$48296_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2538:23:35"},"scope":48341,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":48284,"nodeType":"StructuredDocumentation","src":"130:1148:35","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"},"fullyImplemented":true,"linearizedBaseContracts":[48341],"name":"StorageSlot","nameLocation":"1287:11:35","scope":48342,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":35}